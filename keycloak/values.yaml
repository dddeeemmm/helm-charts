namespace: keycloak

replicas: 1

strategy:
  type:             RollingUpdate
  rollingUpdate:
    partition:      0
    maxSurge:       45%
    maxUnavailable: 45%

image:
  repository: quay.io/keycloak/keycloak
  pullPolicy: IfNotPresent
  tag:        15.0.2

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

resources:
  memory:      128
  cpu:         100
  overselling: 1

probe:
  initialDelaySeconds: 5
  periodSeconds:       5
  failureThreshold:    5

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

nodeSelector: {}

tolerations: []

affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: node-role.kubernetes.io/master
              operator: NotIn
              values:
                - ""
          topologyKey: "kubernetes.io/hostname"
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
            - key: k8s-app
              operator: In
              values:
                - '{{ k8s_mgmt_app_name }}'
        topologyKey: kubernetes.io/hostname

configmap:
  DB_ADDR:                      postgres.local
  DB_PORT:                      5432
  DB_DATABASE:                  keycloak
  DB_VENDOR:                    postgres
  JGROUPS_DISCOVERY_PROTOCOL:   dns.DNS_PING
  JGROUPS_DISCOVERY_PROPERTIES: dns_query=keycloak.local
  PROXY_ADDRESS_FORWARDING:     true
  KEYCLOAK_LOGLEVEL:            DEBUG

secret:
  stringdata:
    KEYCLOAK_USER:     admin
    KEYCLOAK_PASSWORD: password
    DB_USER:           keycloak
    DB_PASSWORD:       password

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
